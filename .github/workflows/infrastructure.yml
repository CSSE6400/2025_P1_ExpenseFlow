name: Infrastructure Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform_plan:
    name: Runs a terraform plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        working-directory: infra
    outputs:
      planfile: tfplan.binary
    steps:
      - uses: hashicorp/setup-terraform@v3
      - uses: levibostian/action-hide-sensitive-inputs@v1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Export credentials
        run: |
          mkdir ~/.aws
          echo ${{ github.event.inputs.aws }} | tr " " "\n" > ~/.aws/credentials

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: infra

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: infra

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out=tfplan.binary
          terraform show -no-color tfplan.binary > tfplan.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/tfplan.binary

      - uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`infra\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
            })
              - uses: trstringer/manual-approval@v1
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers:
          minimum-approvals: 1
          issue-title: "Deploying infra"
          issue-body: "Please approve or deny the deployment of infra"
          exclude-workflow-initiator-as-approver: false
          fail-on-denial: true
          additional-approved-words: "approve,yes,y"
          additional-denied-words: "no,deny,n"
